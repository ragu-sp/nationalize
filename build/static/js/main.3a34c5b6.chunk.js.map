{"version":3,"sources":["header_comp.js","result_table.js","countries.js","App.js","reportWebVitals.js","index.js"],"names":["Header_comp","className","Result_table","id","CountryNames","Countries_List","name","code","Search_country","$obj","state","error","isLoaded","countries","value","top_two_countries","this","type","onChange","get_inpt_name","bind","placeholder","onClick","Find_country","class","event","setState","target","fetch","then","res","json","document","getElementById","result","country","load_country","load_results","ReactDOM","render","Result_table_comp","all_probs","country_probs","message","length","forEach","push","probability","first","reduce","a","b","first_max","Math","max","index","indexOf","splice","second","c","d","find_corresponding_country","console","log","prob","props","Fragment","toUpperCase","map","countryName","country_id","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.3a34c5b6.chunk.js","sourcesContent":["function Header_comp(){\r\n    return(\r\n        <div className=\"header_section\">\r\n            <header className=\"header\">\r\n                <h1>KNOW COUNTRIES MATCHING TO YOUR NAME</h1>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header_comp;","function Result_table(){\r\n    return (\r\n        <div className=\"container\" id=\"result_table\">\r\n            <div id=\"countries_table_section\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result_table;","function CountryNames(){\r\n    return ([ \r\n        {name: \"Afghanistan\", code: \"AF\"}, \r\n        {name: \"Åland Islands\", code: \"AX\"}, \r\n        {name: \"Albania\", code: \"AL\"}, \r\n        {name: \"Algeria\", code: \"DZ\"}, \r\n        {name: \"American Samoa\", code: \"AS\"}, \r\n        {name: \"AndorrA\", code: \"AD\"}, \r\n        {name: \"Angola\", code: \"AO\"}, \r\n        {name: \"Anguilla\", code: \"AI\"}, \r\n        {name: \"Antarctica\", code: \"AQ\"}, \r\n        {name: \"Antigua and Barbuda\", code: \"AG\"}, \r\n        {name: \"Argentina\", code: \"AR\"}, \r\n        {name: \"Armenia\", code: \"AM\"}, \r\n        {name: \"Aruba\", code: \"AW\"}, \r\n        {name: \"Australia\", code: \"AU\"}, \r\n        {name: \"Austria\", code: \"AT\"}, \r\n        {name: \"Azerbaijan\", code: \"AZ\"}, \r\n        {name: \"Bahamas\", code: \"BS\"}, \r\n        {name: \"Bahrain\", code: \"BH\"}, \r\n        {name: \"Bangladesh\", code: \"BD\"}, \r\n        {name: \"Barbados\", code: \"BB\"}, \r\n        {name: \"Belarus\", code: \"BY\"}, \r\n        {name: \"Belgium\", code: \"BE\"}, \r\n        {name: \"Belize\", code: \"BZ\"}, \r\n        {name: \"Benin\", code: \"BJ\"}, \r\n        {name: \"Bermuda\", code: \"BM\"}, \r\n        {name: \"Bhutan\", code: \"BT\"}, \r\n        {name: \"Bolivia\", code: \"BO\"}, \r\n        {name: \"Bosnia and Herzegovina\", code: \"BA\"}, \r\n        {name: \"Botswana\", code: \"BW\"}, \r\n        {name: \"Bouvet Island\", code: \"BV\"}, \r\n        {name: \"Brazil\", code: \"BR\"}, \r\n        {name: \"British Indian Ocean Territory\", code: \"IO\"}, \r\n        {name: \"Brunei Darussalam\", code: \"BN\"}, \r\n        {name: \"Bulgaria\", code: \"BG\"}, \r\n        {name: \"Burkina Faso\", code: \"BF\"}, \r\n        {name: \"Burundi\", code: \"BI\"}, \r\n        {name: \"Cambodia\", code: \"KH\"}, \r\n        {name: \"Cameroon\", code: \"CM\"}, \r\n        {name: \"Canada\", code: \"CA\"}, \r\n        {name: \"Cape Verde\", code: \"CV\"}, \r\n        {name: \"Cayman Islands\", code: \"KY\"}, \r\n        {name: \"Central African Republic\", code: \"CF\"}, \r\n        {name: \"Chad\", code: \"TD\"}, \r\n        {name: \"Chile\", code: \"CL\"}, \r\n        {name: \"China\", code: \"CN\"}, \r\n        {name: \"Christmas Island\", code: \"CX\"}, \r\n        {name: \"Cocos (Keeling) Islands\", code: \"CC\"}, \r\n        {name: \"Colombia\", code: \"CO\"}, \r\n        {name: \"Comoros\", code: \"KM\"}, \r\n        {name: \"Congo\", code: \"CG\"}, \r\n        {name: \"Congo, The Democratic Republic of the\", code: \"CD\"}, \r\n        {name: \"Cook Islands\", code: \"CK\"}, \r\n        {name: \"Costa Rica\", code: \"CR\"}, \r\n        {name: \"Cote D\\\"Ivoire\", code: \"CI\"}, \r\n        {name: \"Croatia\", code: \"HR\"}, \r\n        {name: \"Cuba\", code: \"CU\"}, \r\n        {name: \"Cyprus\", code: \"CY\"}, \r\n        {name: \"Czech Republic\", code: \"CZ\"}, \r\n        {name: \"Denmark\", code: \"DK\"}, \r\n        {name: \"Djibouti\", code: \"DJ\"}, \r\n        {name: \"Dominica\", code: \"DM\"}, \r\n        {name: \"Dominican Republic\", code: \"DO\"}, \r\n        {name: \"Ecuador\", code: \"EC\"}, \r\n        {name: \"Egypt\", code: \"EG\"}, \r\n        {name: \"El Salvador\", code: \"SV\"}, \r\n        {name: \"Equatorial Guinea\", code: \"GQ\"}, \r\n        {name: \"Eritrea\", code: \"ER\"}, \r\n        {name: \"Estonia\", code: \"EE\"}, \r\n        {name: \"Ethiopia\", code: \"ET\"}, \r\n        {name: \"Falkland Islands (Malvinas)\", code: \"FK\"}, \r\n        {name: \"Faroe Islands\", code: \"FO\"}, \r\n        {name: \"Fiji\", code: \"FJ\"}, \r\n        {name: \"Finland\", code: \"FI\"}, \r\n        {name: \"France\", code: \"FR\"}, \r\n        {name: \"French Guiana\", code: \"GF\"}, \r\n        {name: \"French Polynesia\", code: \"PF\"}, \r\n        {name: \"French Southern Territories\", code: \"TF\"}, \r\n        {name: \"Gabon\", code: \"GA\"}, \r\n        {name: \"Gambia\", code: \"GM\"}, \r\n        {name: \"Georgia\", code: \"GE\"}, \r\n        {name: \"Germany\", code: \"DE\"}, \r\n        {name: \"Ghana\", code: \"GH\"}, \r\n        {name: \"Gibraltar\", code: \"GI\"}, \r\n        {name: \"Greece\", code: \"GR\"}, \r\n        {name: \"Greenland\", code: \"GL\"}, \r\n        {name: \"Grenada\", code: \"GD\"}, \r\n        {name: \"Guadeloupe\", code: \"GP\"}, \r\n        {name: \"Guam\", code: \"GU\"}, \r\n        {name: \"Guatemala\", code: \"GT\"}, \r\n        {name: \"Guernsey\", code: \"GG\"}, \r\n        {name: \"Guinea\", code: \"GN\"}, \r\n        {name: \"Guinea-Bissau\", code: \"GW\"}, \r\n        {name: \"Guyana\", code: \"GY\"}, \r\n        {name: \"Haiti\", code: \"HT\"}, \r\n        {name: \"Heard Island and Mcdonald Islands\", code: \"HM\"}, \r\n        {name: \"Holy See (Vatican City State)\", code: \"VA\"}, \r\n        {name: \"Honduras\", code: \"HN\"}, \r\n        {name: \"Hong Kong\", code: \"HK\"}, \r\n        {name: \"Hungary\", code: \"HU\"}, \r\n        {name: \"Iceland\", code: \"IS\"}, \r\n        {name: \"India\", code: \"IN\"}, \r\n        {name: \"Indonesia\", code: \"ID\"}, \r\n        {name: \"Iran, Islamic Republic Of\", code: \"IR\"}, \r\n        {name: \"Iraq\", code: \"IQ\"}, \r\n        {name: \"Ireland\", code: \"IE\"}, \r\n        {name: \"Isle of Man\", code: \"IM\"}, \r\n        {name: \"Israel\", code: \"IL\"}, \r\n        {name: \"Italy\", code: \"IT\"}, \r\n        {name: \"Jamaica\", code: \"JM\"}, \r\n        {name: \"Japan\", code: \"JP\"}, \r\n        {name: \"Jersey\", code: \"JE\"}, \r\n        {name: \"Jordan\", code: \"JO\"}, \r\n        {name: \"Kazakhstan\", code: \"KZ\"}, \r\n        {name: \"Kenya\", code: \"KE\"}, \r\n        {name: \"Kiribati\", code: \"KI\"}, \r\n        {name: \"Korea, Democratic People\\\"S Republic of\", code: \"KP\"}, \r\n        {name: \"Korea, Republic of\", code: \"KR\"}, \r\n        {name: \"Kuwait\", code: \"KW\"}, \r\n        {name: \"Kyrgyzstan\", code: \"KG\"}, \r\n        {name: \"Lao People\\\"S Democratic Republic\", code: \"LA\"}, \r\n        {name: \"Latvia\", code: \"LV\"}, \r\n        {name: \"Lebanon\", code: \"LB\"}, \r\n        {name: \"Lesotho\", code: \"LS\"}, \r\n        {name: \"Liberia\", code: \"LR\"}, \r\n        {name: \"Libyan Arab Jamahiriya\", code: \"LY\"}, \r\n        {name: \"Liechtenstein\", code: \"LI\"}, \r\n        {name: \"Lithuania\", code: \"LT\"}, \r\n        {name: \"Luxembourg\", code: \"LU\"}, \r\n        {name: \"Macao\", code: \"MO\"}, \r\n        {name: \"Macedonia, The Former Yugoslav Republic of\", code: \"MK\"}, \r\n        {name: \"Madagascar\", code: \"MG\"}, \r\n        {name: \"Malawi\", code: \"MW\"}, \r\n        {name: \"Malaysia\", code: \"MY\"}, \r\n        {name: \"Maldives\", code: \"MV\"}, \r\n        {name: \"Mali\", code: \"ML\"}, \r\n        {name: \"Malta\", code: \"MT\"}, \r\n        {name: \"Marshall Islands\", code: \"MH\"}, \r\n        {name: \"Martinique\", code: \"MQ\"}, \r\n        {name: \"Mauritania\", code: \"MR\"}, \r\n        {name: \"Mauritius\", code: \"MU\"}, \r\n        {name: \"Mayotte\", code: \"YT\"}, \r\n        {name: \"Mexico\", code: \"MX\"}, \r\n        {name: \"Micronesia, Federated States of\", code: \"FM\"}, \r\n        {name: \"Moldova, Republic of\", code: \"MD\"}, \r\n        {name: \"Monaco\", code: \"MC\"}, \r\n        {name: \"Mongolia\", code: \"MN\"}, \r\n        {name: \"Montserrat\", code: \"MS\"}, \r\n        {name: \"Morocco\", code: \"MA\"}, \r\n        {name: \"Mozambique\", code: \"MZ\"}, \r\n        {name: \"Myanmar\", code: \"MM\"}, \r\n        {name: \"Namibia\", code: \"NA\"}, \r\n        {name: \"Nauru\", code: \"NR\"}, \r\n        {name: \"Nepal\", code: \"NP\"}, \r\n        {name: \"Netherlands\", code: \"NL\"}, \r\n        {name: \"Netherlands Antilles\", code: \"AN\"}, \r\n        {name: \"New Caledonia\", code: \"NC\"}, \r\n        {name: \"New Zealand\", code: \"NZ\"}, \r\n        {name: \"Nicaragua\", code: \"NI\"}, \r\n        {name: \"Niger\", code: \"NE\"}, \r\n        {name: \"Nigeria\", code: \"NG\"}, \r\n        {name: \"Niue\", code: \"NU\"}, \r\n        {name: \"Norfolk Island\", code: \"NF\"}, \r\n        {name: \"Northern Mariana Islands\", code: \"MP\"}, \r\n        {name: \"Norway\", code: \"NO\"}, \r\n        {name: \"Oman\", code: \"OM\"}, \r\n        {name: \"Pakistan\", code: \"PK\"}, \r\n        {name: \"Palau\", code: \"PW\"}, \r\n        {name: \"Palestinian Territory, Occupied\", code: \"PS\"}, \r\n        {name: \"Panama\", code: \"PA\"}, \r\n        {name: \"Papua New Guinea\", code: \"PG\"}, \r\n        {name: \"Paraguay\", code: \"PY\"}, \r\n        {name: \"Peru\", code: \"PE\"}, \r\n        {name: \"Philippines\", code: \"PH\"}, \r\n        {name: \"Pitcairn\", code: \"PN\"}, \r\n        {name: \"Poland\", code: \"PL\"}, \r\n        {name: \"Portugal\", code: \"PT\"}, \r\n        {name: \"Puerto Rico\", code: \"PR\"}, \r\n        {name: \"Qatar\", code: \"QA\"}, \r\n        {name: \"Reunion\", code: \"RE\"}, \r\n        {name: \"Romania\", code: \"RO\"}, \r\n        {name: \"Russian Federation\", code: \"RU\"}, \r\n        {name: \"RWANDA\", code: \"RW\"}, \r\n        {name: \"Saint Helena\", code: \"SH\"}, \r\n        {name: \"Saint Kitts and Nevis\", code: \"KN\"}, \r\n        {name: \"Saint Lucia\", code: \"LC\"}, \r\n        {name: \"Saint Pierre and Miquelon\", code: \"PM\"}, \r\n        {name: \"Saint Vincent and the Grenadines\", code: \"VC\"}, \r\n        {name: \"Samoa\", code: \"WS\"}, \r\n        {name: \"San Marino\", code: \"SM\"}, \r\n        {name: \"Sao Tome and Principe\", code: \"ST\"}, \r\n        {name: \"Saudi Arabia\", code: \"SA\"}, \r\n        {name: \"Senegal\", code: \"SN\"}, \r\n        {name: \"Serbia and Montenegro\", code: \"CS\"}, \r\n        {name: \"Seychelles\", code: \"SC\"}, \r\n        {name: \"Sierra Leone\", code: \"SL\"}, \r\n        {name: \"Singapore\", code: \"SG\"}, \r\n        {name: \"Slovakia\", code: \"SK\"}, \r\n        {name: \"Slovenia\", code: \"SI\"}, \r\n        {name: \"Solomon Islands\", code: \"SB\"}, \r\n        {name: \"Somalia\", code: \"SO\"}, \r\n        {name: \"South Africa\", code: \"ZA\"}, \r\n        {name: \"South Georgia and the South Sandwich Islands\", code: \"GS\"}, \r\n        {name: \"Spain\", code: \"ES\"}, \r\n        {name: \"Sri Lanka\", code: \"LK\"}, \r\n        {name: \"Sudan\", code: \"SD\"}, \r\n        {name: \"Suri\", code: \"SR\"}, \r\n        {name: \"Svalbard and Jan Mayen\", code: \"SJ\"}, \r\n        {name: \"Swaziland\", code: \"SZ\"}, \r\n        {name: \"Sweden\", code: \"SE\"}, \r\n        {name: \"Switzerland\", code: \"CH\"}, \r\n        {name: \"Syrian Arab Republic\", code: \"SY\"}, \r\n        {name: \"Taiwan, Province of China\", code: \"TW\"}, \r\n        {name: \"Tajikistan\", code: \"TJ\"}, \r\n        {name: \"Tanzania, United Republic of\", code: \"TZ\"}, \r\n        {name: \"Thailand\", code: \"TH\"}, \r\n        {name: \"Timor-Leste\", code: \"TL\"}, \r\n        {name: \"Togo\", code: \"TG\"}, \r\n        {name: \"Tokelau\", code: \"TK\"}, \r\n        {name: \"Tonga\", code: \"TO\"}, \r\n        {name: \"Trinidad and Tobago\", code: \"TT\"}, \r\n        {name: \"Tunisia\", code: \"TN\"}, \r\n        {name: \"Turkey\", code: \"TR\"}, \r\n        {name: \"Turkmenistan\", code: \"TM\"}, \r\n        {name: \"Turks and Caicos Islands\", code: \"TC\"}, \r\n        {name: \"Tuvalu\", code: \"TV\"}, \r\n        {name: \"Uganda\", code: \"UG\"}, \r\n        {name: \"Ukraine\", code: \"UA\"}, \r\n        {name: \"United Arab Emirates\", code: \"AE\"}, \r\n        {name: \"United Kingdom\", code: \"GB\"}, \r\n        {name: \"United States\", code: \"US\"}, \r\n        {name: \"United States Minor Outlying Islands\", code: \"UM\"}, \r\n        {name: \"Uruguay\", code: \"UY\"}, \r\n        {name: \"Uzbekistan\", code: \"UZ\"}, \r\n        {name: \"Vanuatu\", code: \"VU\"}, \r\n        {name: \"Venezuela\", code: \"VE\"}, \r\n        {name: \"Viet Nam\", code: \"VN\"}, \r\n        {name: \"Virgin Islands, British\", code: \"VG\"}, \r\n        {name: \"Virgin Islands, U.S.\", code: \"VI\"}, \r\n        {name: \"Wallis and Futuna\", code: \"WF\"}, \r\n        {name: \"Western Sahara\", code: \"EH\"}, \r\n        {name: \"Yemen\", code: \"YE\"}, \r\n        {name: \"Zambia\", code: \"ZM\"}, \r\n        {name: \"Zimbabwe\", code: \"ZW\"} \r\n      ])\r\n}\r\n\r\nexport default CountryNames;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Header_comp from './header_comp.js';\nimport Result_table from './result_table';\nimport CountryNames from './countries';\n\nconst Countries_List = CountryNames();\n\n//Search Class Component\nclass Search_country extends React.Component{\n\n  constructor(){\n    super();\n    const $obj = this;\n\n    $obj.state = {\n      error: null,\n      isLoaded: false,\n      countries: [],\n      value: null\n    };\n    $obj.top_two_countries = [];\n  }\n\n  render(){\n    const $obj = this;\n    return (\n      <div id=\"serch_box\" className=\"container\">\n        <div className=\"input-group\">\n          <input type=\"text\" className=\"form-control\" onChange={this.get_inpt_name.bind(this,$obj)} placeholder=\"Your Name\"></input>\n          <div className=\"input-group-btn\">\n            <button onClick={() => $obj.Find_country()} className=\"btn btn-primary search_btn\" type=\"submit\"><i class=\"fa fa-search\" ></i> SEARCH</button>\n          </div>\n        </div>\n      </div>   \n    )\n  }\n\n  get_inpt_name($obj, event){\n    $obj.setState({value: event.target.value});\n  }\n\n  Find_country() {\n    const $obj = this;\n    \n    const { error, isLoaded, countries, value } = $obj.state;\n    $obj.setState({countries: []});\n    $obj.state = {countries: []};\n    $obj.top_two_countries = [];\n    if(!value){\n      $obj.load_results();\n    }else{\n      fetch(\"https://api.nationalize.io/?name=\"+value)\n        .then(res => res.json())\n        .then(\n          document.getElementById(\"loader\").className = \"preloader show_loader\"\n        )\n        .then(\n          (result) => {\n            document.getElementById(\"loader\").className = \"preloader hide_loader\"\n            $obj.setState({\n              isLoaded: true,\n              countries: result.country\n            });\n            $obj.load_country();\n          },\n          (error) => {\n            $obj.setState({\n              isLoaded: true,\n              error\n            });\n          }\n      )\n    }\n  }\n\n  load_results(){\n    const $obj = this;\n    ReactDOM.render(<$obj.Result_table_comp countries={$obj.top_two_countries} name={$obj.state.value}/>, document.getElementById(\"countries_table_section\"));\n  }\n\n  load_country() {\n    const $obj = this;\n    const { error, isLoaded, countries } = $obj.state;\n    var all_probs = [];\n    var country_probs = [];\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    }else if (!isLoaded) {\n      return <div>Loading...</div>;\n    }\n    if(countries.length > 1){\n      countries.forEach(function(country){\n        country_probs.push(country.probability);\n        all_probs.push(country.probability);\n      });\n      var first = country_probs.reduce(function(a, b) {\n        var first_max = Math.max(a, b);\n        var index = country_probs.indexOf(first_max);\n        country_probs.splice(index,1);\n        return first_max;\n      }, 0);\n      var second = country_probs.reduce(function(c, d) {\n        var second_max = Math.max(c, d);\n        return second_max;\n      }, 0);\n      $obj.top_two_countries.push($obj.find_corresponding_country(first,all_probs,countries));\n      $obj.top_two_countries.push($obj.find_corresponding_country(second,all_probs,countries));\n\n    }else if(countries.length != 0 && countries.length < 2){\n      console.log(\"country is \", countries[0]);\n      $obj.top_two_countries.push(countries[0]);\n    }\n    $obj.load_results();\n  }\n\n  find_corresponding_country(prob,country_probs,countries){\n    var found_country;\n    found_country = countries[country_probs.indexOf(prob)];\n    return found_country;\n  }\n\n  Result_table_comp(props){\n    const $obj = this;\n\n    if(props.countries.length < 1){\n      return (\n        <p className=\"Showing_res_text_notfound\"><strong>No Data Found..</strong></p>\n      );\n    }\n\n    return(\n      <React.Fragment>\n        <p className=\"Showing_res_text_found\"><strong>{props.countries.length}</strong> Country(s) found for your Name `<strong>{props.name.toUpperCase()}</strong>`</p>\n        <div className=\"table_parent_box\">\n        <table id=\"countries_table\" className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>S.NO</th>\n              <th>Country</th>\n              <th>Probability</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n                props.countries.map(country => {\n                  return(\n                    <tr>\n                              <td>{props.countries.indexOf(country)+1}</td>\n                              <td>{\n                              Countries_List.map(countryName=>{\n                                if(countryName.code == country.country_id){\n                                  return countryName.name;\n                                }else{\n                                  return \"\";\n                                }\n                              })\n                            }</td>\n                              <td>{country.probability}</td>\n                    </tr>\n                  );\n                })\n              }\n          </tbody>\n        </table>\n        </div>\n      </React.Fragment>\n    )\n  }\n \n}\n//Search Class Component End\n\n// Parent Component\nfunction App() {\n  return (\n    <div>\n      <Header_comp></Header_comp>\n      <div className=\"Search_and_result_container\">\n        <Search_country></Search_country>\n        <Result_table></Result_table>\n      </div>\n    </div> \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}